services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ communication port
      - "15672:15672"  # Management plugin port
    volumes:
      # Mount your custom rabbitmq.conf and definitions.json
      - ./rabbitmq_service/conf/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq_service/conf/definitions.json:/etc/rabbitmq/definitions.json
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    restart: unless-stopped
  gradio_interface:
    build: ./gradio_interface
    ports:
      - "7860:7860"
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    depends_on:
      - rabbitmq
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: ["/wait-for-it.sh", "rabbitmq:5672", "--", "python", "/app/app.py"]
    restart: unless-stopped

  celebrity_recognition:
    build: ./celebrity_recognition
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - IMAGE_RECOGNIZE_API_KEY=${IMAGE_RECOGNIZE_API_KEY}
    depends_on:
      - rabbitmq
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: ["/wait-for-it.sh", "rabbitmq:5672", "--", "python", "/app/app.py"]
    restart: unless-stopped

  bio_retrieval:
    build: ./bio_retrieval
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RAPID_API_KEY=${RAPID_API_KEY}
    depends_on:
      - rabbitmq
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: ["/wait-for-it.sh", "rabbitmq:5672", "--", "python", "/app/app.py"]
    restart: unless-stopped

  social_media:
    build: ./social_media
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RAPID_API_KEY=${RAPID_API_KEY}
    depends_on:
      - rabbitmq
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: ["/wait-for-it.sh", "rabbitmq:5672", "--", "python", "/app/app.py"]
    restart: unless-stopped


#  recent_pictures_retrieval:
#    build: ./recent_pictures_retrieval
#    environment:
#      - PYTHONUNBUFFERED=1
#      - RABBITMQ_HOST=${RABBITMQ_HOST}
#      - RABBITMQ_USER=${RABBITMQ_USER}
#      - RABBITMQ_PASS=${RABBITMQ_PASS}
#    depends_on:
#      - rabbitmq
#    volumes:
#      - ./wait-for-it.sh:/wait-for-it.sh
#    entrypoint: ["/wait-for-it.sh", "rabbitmq:5672", "--", "python", "/app/app.py"]
#    restart: unless-stopped

#  information_assembler:
#    build: ./information_assembler
#    environment:
#      - PYTHONUNBUFFERED=1
#      - RABBITMQ_HOST=${RABBITMQ_HOST}
#      - RABBITMQ_USER=${RABBITMQ_USER}
#      - RABBITMQ_PASS=${RABBITMQ_PASS}
#    depends_on:
#      - rabbitmq
#    volumes:
#      - ./wait-for-it.sh:/wait-for-it.sh
#    entrypoint: ["/wait-for-it.sh", "rabbitmq:5672", "--", "python", "/app/app.py"]
#    restart: unless-stopped

volumes:
  rabbitmq_data:
